"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8207],{52894:(e,t,a)=>{a.d(t,{ZP:()=>i});var n=a(87462),o=(a(67294),a(3905));const s={toc:[]};function i(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Missing Documentation",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This part of the documentation is not yet written. Stay tuned.")))}i.isMDXComponent=!0},85162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(67294),o=a(86010);const s="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(s,i),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(87462),o=a(67294),s=a(86010),i=a(72389),l=a(67392),r=a(7094),u=a(12466);const c="tabList__CuJ",d="tabItem_LNqP";function p(e){var t,a;const{lazy:i,block:p,defaultValue:m,values:v,groupId:b,className:h}=e,k=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=v?v:k.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),y=(0,l.l)(f,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const g=null===m?m:null!=(t=null!=m?m:null==(a=k.find((e=>e.props.default)))?void 0:a.props.value)?t:k[0].props.value;if(null!==g&&!f.some((e=>e.value===g)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:T,setTabGroupChoices:w}=(0,r.U)(),[D,x]=(0,o.useState)(g),S=[],{blockElementScrollPositionUntilNextRender:A}=(0,u.o5)();if(null!=b){const e=T[b];null!=e&&e!==D&&f.some((t=>t.value===e))&&x(e)}const E=e=>{const t=e.currentTarget,a=S.indexOf(t),n=f[a].value;n!==D&&(A(t),x(n),null!=b&&w(b,String(n)))},V=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=S.indexOf(e.currentTarget)+1;a=null!=(n=S[t])?n:S[0];break}case"ArrowLeft":{var o;const t=S.indexOf(e.currentTarget)-1;a=null!=(o=S[t])?o:S[S.length-1];break}}null==(t=a)||t.focus()};return o.createElement("div",{className:(0,s.Z)("tabs-container",c)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":p},h)},f.map((e=>{let{value:t,label:a,attributes:i}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:D===t?0:-1,"aria-selected":D===t,key:t,ref:e=>S.push(e),onKeyDown:V,onFocus:E,onClick:E},i,{className:(0,s.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":D===t})}),null!=a?a:t)}))),i?(0,o.cloneElement)(k.filter((e=>e.props.value===D))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==D})))))}function m(e){const t=(0,i.Z)();return o.createElement(p,(0,n.Z)({key:String(t)},e))}},57676:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>b,frontMatter:()=>u,metadata:()=>d,toc:()=>m});var n=a(87462),o=(a(67294),a(3905)),s=a(61839),i=a(65488),l=a(85162),r=a(52894);const u={},c="Setup VAST",d={unversionedId:"setup-vast/README",id:"setup-vast/README",title:"Setup VAST",description:"This section describes VAST from an operator perspective. We cover the",source:"@site/docs/setup-vast/README.md",sourceDirName:"setup-vast",slug:"/setup-vast/",permalink:"/docs/setup-vast/",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/setup-vast/README.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Quickstart",permalink:"/docs/try-vast/quickstart"},next:{title:"Download",permalink:"/docs/setup-vast/download"}},p={},m=[{value:"Run VAST",id:"run-vast",level:2},{value:"Ingest Data",id:"ingest-data",level:2},{value:"Query Data",id:"query-data",level:2},{value:"Transform Data",id:"transform-data",level:2},{value:"Match Data",id:"match-data",level:2}],v={toc:m};function b(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},v,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"setup-vast"},"Setup VAST"),(0,o.kt)("p",null,"This section describes VAST from an ",(0,o.kt)("strong",{parentName:"p"},"operator perspective"),". We cover the\ndifferent stages of the setup process that ultimately yield a running VAST\ninstance. You have several options to enter the setup pipeline, based on what\nintermediate artifact you would like to begin with."),(0,o.kt)(s.G,{chart:'flowchart LR\n  classDef action fill:#00a4f1,stroke:none,color:#eee\n  classDef artifact fill:#bdcfdb,stroke:none,color:#222\n  %% Actions\n  download(Download):::action\n  build(Build):::action\n  install(Install):::action\n  deploy(Deploy):::action\n  configure(Configure):::action\n  tune(Tune):::action\n  monitor(Monitor):::action\n  %% Artifacts\n  source([Source Code]):::artifact\n  binary([Binary]):::artifact\n  deployable([Package/Image]):::artifact\n  instance([Instance]):::artifact\n  %% Edges\n  download --\x3e source\n  download --\x3e binary\n  download --\x3e deployable\n  source --\x3e build\n  build --\x3e binary\n  binary --\x3e install\n  install --\x3e deployable\n  deployable --\x3e deploy\n  deploy --\x3e instance\n  instance <--\x3e configure\n  instance <--\x3e tune\n  instance <--\x3e monitor\n  %% Links\n  click download "setup-vast/download" "Download VAST"\n  click build "setup-vast/build" "Build VAST"\n  click install "setup-vast/install" "Install VAST"\n  click deploy "setup-vast/deploy" "Deploy VAST"\n  click configure "setup-vast/configure" "Configure VAST"\n  click tune "setup-vast/tune" "Tune VAST"\n  click monitor "setup-vast/monitor" "Monitor VAST"',mdxType:"Mermaid"}),(0,o.kt)("admonition",{title:"Quick Start",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Want hands-on experience with VAST? Then continue with a quick tour below. \ud83d\udc47")),(0,o.kt)("h2",{id:"run-vast"},"Run VAST"),(0,o.kt)("p",null,"To get up and running quickly, we recommend using the static binary or Docker\nimage:"),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"static",label:"Static Binary",default:!0,mdxType:"TabItem"},"If you have a Linux at your fingertips, just download and extract our package with a static binary:",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'mkdir /opt/vast\ncd /opt/vast\nwget https://github.com/tenzir/vast/releases/latest/download/vast-linux-static.tar.gz\nmkdir -p /opt/vast\ntar xzf vast-linux-static.tar.gz -C /opt/vast\nexport PATH="/opt/vast/bin:$PATH" # based on your shell, e.g., fish_add_path /opt/vast/bin\nvast start\n'))),(0,o.kt)(l.Z,{value:"docker",label:"Docker",mdxType:"TabItem"},"For a container deployment, use our official Docker image:",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull tenzir/vast\nmkdir -p /tmp/db # persistent state\ndocker run -dt --name=vast --rm -p 42000:42000 -v /tmp/db:/var/lib/vast \\\n  tenzir/vast start\n")))),(0,o.kt)("p",null,"Now that you have running VAST node, you can start ingesting data."),(0,o.kt)("h2",{id:"ingest-data"},"Ingest Data"),(0,o.kt)(r.ZP,{mdxType:"MissingDocumentation"}),(0,o.kt)("h2",{id:"query-data"},"Query Data"),(0,o.kt)(r.ZP,{mdxType:"MissingDocumentation"}),(0,o.kt)("h2",{id:"transform-data"},"Transform Data"),(0,o.kt)(r.ZP,{mdxType:"MissingDocumentation"}),(0,o.kt)("h2",{id:"match-data"},"Match Data"),(0,o.kt)(r.ZP,{mdxType:"MissingDocumentation"}))}b.isMDXComponent=!0}}]);