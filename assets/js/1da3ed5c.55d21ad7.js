"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5646],{65857:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var a=n(83117),p=(n(67294),n(3905));n(61839);const s={},i="Plugin Development",r={unversionedId:"use-vast/integrate/threatbus/understand/plugins/plugin-development",id:"use-vast/integrate/threatbus/understand/plugins/plugin-development",title:"Plugin Development",description:"This page provides a simply overview of the steps necessary for plugin",source:"@site/docs/use-vast/integrate/threatbus/understand/plugins/plugin-development.md",sourceDirName:"use-vast/integrate/threatbus/understand/plugins",slug:"/use-vast/integrate/threatbus/understand/plugins/plugin-development",permalink:"/docs/use-vast/integrate/threatbus/understand/plugins/plugin-development",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/use-vast/integrate/threatbus/understand/plugins/plugin-development.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"RabbitMQ Backbone Plugin",permalink:"/docs/use-vast/integrate/threatbus/understand/plugins/backbones/rabbitmq"},next:{title:"Understand VAST",permalink:"/docs/understand-vast/"}},o={},l=[{value:"Configuration &amp; Extension",id:"configuration--extension",level:2},{value:"Implementation Specs",id:"implementation-specs",level:3},{value:"Stoppable Workers",id:"stoppable-workers",level:4}],u={toc:l};function m(e){let{components:t,...n}=e;return(0,p.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"plugin-development"},"Plugin Development"),(0,p.kt)("p",null,"This page provides a simply overview of the steps necessary for plugin\ndevelopment. We recommend to use a ",(0,p.kt)("a",{parentName:"p",href:"https://docs.python.org/3/tutorial/venv.html"},"virtual\nenvironment")," for all development\nactivities."),(0,p.kt)("p",null,"Clone the Threat Bus project, setup a virtual env, and install ",(0,p.kt)("inlineCode",{parentName:"p"},"threatbus")," and\nsome plugins with the in development mode:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"git clone https://github.com/tenzir/threatbus.git\ncd threatbus\npython -m venv --system-site-packages venv\nsource venv/bin/activate\nmake dev-mode\n")),(0,p.kt)("h2",{id:"configuration--extension"},"Configuration & Extension"),(0,p.kt)("p",null,"A plugin must define a ",(0,p.kt)("inlineCode",{parentName:"p"},"setup.py"),". Whenever a plugin is installed, you have to\nadd a corresponding configuration section to ",(0,p.kt)("inlineCode",{parentName:"p"},"threatbus"),"' ",(0,p.kt)("inlineCode",{parentName:"p"},"config.yaml"),". That\nsection has to be named after the ",(0,p.kt)("inlineCode",{parentName:"p"},"name")," in the entry-point declaration of the\nplugin's ",(0,p.kt)("inlineCode",{parentName:"p"},"setup.py")," file."),(0,p.kt)("p",null,"Please adhere to the ",(0,p.kt)("a",{parentName:"p",href:"https://pluggy.readthedocs.io/en/latest/#a-complete-example"},"plugin naming\nconventions"),"\nproposed by ",(0,p.kt)("a",{parentName:"p",href:"https://pypi.org/project/pluggy/"},"pluggy")," and always prefix your\nplugin name with ",(0,p.kt)("inlineCode",{parentName:"p"},"threatbus-"),"."),(0,p.kt)("p",null,"Plugins can either be apps or backbones. Application plugins add new\nfunctionality to Threat Bus and allow communication with applications that\nconsume or produce security content (e.g., Zeek or Suricata). Backbone plugins\nadd a new storage and distribution backend to Threat Bus (e.g., in-memory or\nRabbitMQ)."),(0,p.kt)("p",null,"Consider the following example setup:"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"Plugin folder structure:",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"plugins\n\u251c\u2500\u2500 apps\n|   \u2514\u2500\u2500 threatbus_myapp\n\u2502       \u251c\u2500\u2500 setup.py\n|       \u2514\u2500\u2500 threatbus_myapp\n            \u2514\u2500\u2500 plugin.py\n\u2514\u2500\u2500 backbones\n    \u2514\u2500\u2500 threatbus_mybackbone\n        \u251c\u2500\u2500 setup.py\n        \u2514\u2500\u2500 threatbus_mybackbone\n            \u2514\u2500\u2500 plugin.py\n"))),(0,p.kt)("li",{parentName:"ul"},"The ",(0,p.kt)("inlineCode",{parentName:"li"},"setup.py")," file for a new plugin call ",(0,p.kt)("inlineCode",{parentName:"li"},"myapp"),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-py"},'from setuptools import setup\nsetup(\n  name="threatbus-myapp",\n  install_requires="threatbus",\n  entry_points={"threatbus.app": ["myapp = threatbus_myapp.plugin"]},\n  packages=["threatbus_myapp"],\n)\n'))),(0,p.kt)("li",{parentName:"ul"},"The corresponding ",(0,p.kt)("inlineCode",{parentName:"li"},"config.yaml")," entry for the new plugin",(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},"...\nplugins:\n  apps:\n    myapp:\n      some-property: some-value\n")))),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"setup.py")," file for the backbone plugin would look similar, except that the\n",(0,p.kt)("inlineCode",{parentName:"p"},"entrypoint")," declaration must instead refer to ",(0,p.kt)("inlineCode",{parentName:"p"},"threatbus.backbone")," instead of\n",(0,p.kt)("inlineCode",{parentName:"p"},"threatbus.app"),"."),(0,p.kt)("h3",{id:"implementation-specs"},"Implementation Specs"),(0,p.kt)("p",null,"Threat Bus uses ",(0,p.kt)("a",{parentName:"p",href:"https://pypi.org/project/pluggy/"},"pluggy")," for plugin\nmanagement. Hence, users must implement the\n",(0,p.kt)("a",{parentName:"p",href:"https://pluggy.readthedocs.io/en/latest/#implementations"},"hookspecs")," defined in\nthe Threat Bus core project. Think of ",(0,p.kt)("inlineCode",{parentName:"p"},"hookspecs")," as an interface definition\nfor plugins."),(0,p.kt)("p",null,"Find these plugin specifications in\n",(0,p.kt)("a",{parentName:"p",href:"https://github.com/tenzir/threatbus/blob/master/threatbus/appspecs.py"},"threatbus/appspecs.py"),"\nand\n",(0,p.kt)("a",{parentName:"p",href:"https://github.com/tenzir/threatbus/blob/master/threatbus/backbonespecs.py"},"threatbus/backbonespecs.py"),".\nFor any plugin, you should at least implement the ",(0,p.kt)("inlineCode",{parentName:"p"},"run")," function."),(0,p.kt)("h4",{id:"stoppable-workers"},"Stoppable Workers"),(0,p.kt)("p",null,"Threat Bus plugins are encouraged to use Python threads, so a busy plugin can\nnever block the main thread and Threat Bus stays operational. For that, we offer\nthe\n",(0,p.kt)("a",{parentName:"p",href:"https://github.com/tenzir/threatbus/blob/master/threatbus/stoppable_worker.py"},"StoppableWorker"),"\nbase-class to model plugin's busy work. Implementing that class also facilitates\na graceful shutdown. Please use this class when implementing your own Threat Bus\nplugin."),(0,p.kt)("p",null,"All officially maintained Threat Bus plugins implement ",(0,p.kt)("inlineCode",{parentName:"p"},"StoppableWorker"),". Refer\nto any of the existing plugins for an example."))}m.isMDXComponent=!0}}]);