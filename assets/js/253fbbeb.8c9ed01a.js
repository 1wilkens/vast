"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8675],{88202:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));a(61839);const r={sidebar_position:1},o="Git and GitHub Workflow",s={unversionedId:"develop-vast/contributing/workflow",id:"develop-vast/contributing/workflow",title:"Git and GitHub Workflow",description:"The following diagram visualizes our branching model:",source:"@site/docs/develop-vast/contributing/workflow.md",sourceDirName:"develop-vast/contributing",slug:"/develop-vast/contributing/workflow",permalink:"/docs/develop-vast/contributing/workflow",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/develop-vast/contributing/workflow.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Code of Conduct",permalink:"/docs/develop-vast/contributing/code-of-conduct"},next:{title:"Coding Style",permalink:"/docs/develop-vast/contributing/coding-style"}},l={},p=[{value:"Commit Messages",id:"commit-messages",level:2}],m={toc:p};function c(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"git-and-github-workflow"},"Git and GitHub Workflow"),(0,i.kt)("p",null,"The following diagram visualizes our branching model:"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/53797/156560785-c7279447-63eb-4428-9a11-9c90cc03acc8.png",alt:"Branching Model"})),(0,i.kt)("p",null,"Our git workflow looks as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"master")," branch reflects the latest state of development, and should\nalways compile.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In case we need to release a hotfix, we use dedicated patch release branches.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"stable")," branch always points to the latest release that is not a release\ncandidate. It exists so support a streamlined workflow for some packaging\ntools (e.g., Nix).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For new features or fixes, use ",(0,i.kt)("em",{parentName:"p"},"topic branches")," that branch off ",(0,i.kt)("inlineCode",{parentName:"p"},"master")," with\na naming convention of ",(0,i.kt)("inlineCode",{parentName:"p"},"topic/description"),". After completing work in a topic\nbranch, check the following steps to prepare for a merge back into ",(0,i.kt)("inlineCode",{parentName:"p"},"master"),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Squash your commits such that each commit reflects a self-contained change.\nYou can interactively rebase all commits in your current pull request with\n",(0,i.kt)("inlineCode",{parentName:"p"},"git rebase --interactive $(git merge-base origin/master HEAD)"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Create a pull request to ",(0,i.kt)("inlineCode",{parentName:"p"},"master")," on GitHub.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Wait for the results of continuous integration tools and fix any reported\nissues.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ask a maintainer to review your work when your changes merge cleanly. If\nyou don't want a specific maintainer's feedback, ask for a team review from\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/orgs/tenzir/teams/vast"},"tenzir/vast"),", or for more\nspecific aspects from\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/orgs/tenzir/teams/devops"},"tenzir/devops")," and\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/orgs/tenzir/teams/secops"},"tenzir/secops"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Address the feedback articulated during the review.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A maintainer will merge the topic branch into ",(0,i.kt)("inlineCode",{parentName:"p"},"master")," after it passes the\ncode review.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Similarly, for features or fixes relating to a specific GitHub issue, use\n",(0,i.kt)("em",{parentName:"p"},"topic branches")," that branch off ",(0,i.kt)("inlineCode",{parentName:"p"},"master")," with a naming convention of\n",(0,i.kt)("inlineCode",{parentName:"p"},"topic/XXX"),", replacing XXX with a short description of the issue.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Internally, we use ",(0,i.kt)("a",{parentName:"p",href:"https://shortcut.com/"},"Shortcut")," for project management,\nand employees are advised to create ",(0,i.kt)("em",{parentName:"p"},"story branches")," that branch off ",(0,i.kt)("inlineCode",{parentName:"p"},"master"),"\nwith a naming convention of ",(0,i.kt)("inlineCode",{parentName:"p"},"story/sc-XXX/description"),", replacing XXX with\nthe story number."))),(0,i.kt)("h2",{id:"commit-messages"},"Commit Messages"),(0,i.kt)("p",null,"Commit messages are formatted according to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/agis/git-style-guide"},"this git style\nguide"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'The first line succinctly summarizes the changes in no more than 50\ncharacters. It is capitalized and written in and imperative present tense:\ne.g., "Fix a bug" as opposed to "Fixes a bug" or "Fixed a bug". As a\nmnemonic, prepend "When applied, this commit will" to the commit summary and\ncheck if it builds a full sentence.')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The first line does not contain a dot at the end. (Think of it as the header\nof the following description).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The second line is empty.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Optional long descriptions as full sentences begin on the third line,\nindented at 72 characters per line, explaining ",(0,i.kt)("em",{parentName:"p"},"why")," the change is needed,\n",(0,i.kt)("em",{parentName:"p"},"how")," it addresses the underlying issue, and what ",(0,i.kt)("em",{parentName:"p"},"side-effects")," it might\nhave."))))}c.isMDXComponent=!0}}]);