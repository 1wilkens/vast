"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4578],{3905:function(t,e,a){a.d(e,{Zo:function(){return d},kt:function(){return u}});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),s=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},d=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),c=s(a),u=r,k=c["".concat(p,".").concat(u)]||c[u]||m[u]||i;return a?n.createElement(k,l(l({ref:e},d),{},{components:a})):n.createElement(k,l({ref:e},d))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},97218:function(t,e,a){a.r(e),a.d(e,{assets:function(){return d},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return m}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),l=["components"],o={sidebar_position:1},p="Build",s={unversionedId:"setup-vast/build",id:"setup-vast/build",title:"Build",description:"Like many C++ projects, VAST uses CMake to manage the build",source:"@site/docs/setup-vast/build.md",sourceDirName:"setup-vast",slug:"/setup-vast/build",permalink:"/docs/setup-vast/build",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/setup-vast/build.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Download",permalink:"/docs/setup-vast/download"},next:{title:"Install",permalink:"/docs/setup-vast/install/"}},d={},m=[{value:"Dependencies",id:"dependencies",level:2},{value:"Nix Environment",id:"nix-environment",level:3},{value:"Compile",id:"compile",level:2},{value:"Test",id:"test",level:2},{value:"Install",id:"install",level:2}],c={toc:m};function u(t){var e=t.components,a=(0,r.Z)(t,l);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"build"},"Build"),(0,i.kt)("p",null,"Like many C++ projects, VAST uses ",(0,i.kt)("a",{parentName:"p",href:"https://cmake.org"},"CMake")," to manage the build\nprocess. Aside from a modern C++20 compiler, you need to ensure availability of\nthe dependencies in the table below."),(0,i.kt)("p",null,"We provide ",(0,i.kt)("a",{parentName:"p",href:"#nix"},"Nix")," expressions for deterministic builds."),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"SPDX SBOM")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Every ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/tenzir/vast/releases"},"release")," of VAST includes an\n",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Software_bill_of_materials"},"SBOM")," in\n",(0,i.kt)("a",{parentName:"p",href:"https://spdx.dev"},"SPDX")," format that includes a comprehensive listing of all\ndependencies and versions."),(0,i.kt)("p",{parentName:"div"},"\ud83d\udc49 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/tenzir/vast/releases/latest/download/VAST.spdx"},"Download the ",(0,i.kt)("strong",{parentName:"a"},"latest SBOM")," here"),"."))),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Dependency"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Version"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},"C++ Compiler"),(0,i.kt)("td",{parentName:"tr",align:"center"},"C++20 required"),(0,i.kt)("td",{parentName:"tr",align:null},"VAST is tested to compile with GCC >= 10.0 and Clang >= 13.0.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://cmake.org"},"CMake")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 3.18"),(0,i.kt)("td",{parentName:"tr",align:null},"Cross-platform tool for building, testing and packaging software.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://github.com/actor-framework/actor-framework"},"CAF")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 0.17.6"),(0,i.kt)("td",{parentName:"tr",align:null},"Implementation of the actor model in C++. (Bundled as submodule.)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://google.github.io/flatbuffers/"},"FlatBuffers")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 1.12.0"),(0,i.kt)("td",{parentName:"tr",align:null},"Memory-efficient cross-platform serialization library.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://arrow.apache.org"},"Apache Arrow")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 7.0.0"),(0,i.kt)("td",{parentName:"tr",align:null},"Required for in-memory data representation. Must be built with Compute, Zstd and Parquet enabled.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://github.com/jbeder/yaml-cpp"},"yaml-cpp")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 0.6.2"),(0,i.kt)("td",{parentName:"tr",align:null},"Required for reading YAML configuration files.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://github.com/simdjson/simdjson"},"simdjson")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 0.7"),(0,i.kt)("td",{parentName:"tr",align:null},"Required for high-performance JSON parsing.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://github.com/gabime/spdlog"},"spdlog")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 1.5"),(0,i.kt)("td",{parentName:"tr",align:null},"Required for logging.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://fmt.dev"},"fmt")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 7.1.3"),(0,i.kt)("td",{parentName:"tr",align:null},"Required for formatted text output.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://github.com/Cyan4973/xxHash"},"xxHash")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 0.8.0"),(0,i.kt)("td",{parentName:"tr",align:null},"Required for computing fast hash digests.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://github.com/Tessil/robin-map"},"robin-map")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 0.6.3"),(0,i.kt)("td",{parentName:"tr",align:null},"Fast hash map and hash set using robin hood hashing. (Bundled as subtree.)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://github.com/p-ranav/indicators"},"indicators")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 2.2.0"),(0,i.kt)("td",{parentName:"tr",align:null},"Activity indicators. (Bundled as submodule.)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://github.com/FastFloat/fast_float"},"fast_float")),(0,i.kt)("td",{parentName:"tr",align:"center"},">= 3.2.0"),(0,i.kt)("td",{parentName:"tr",align:null},"Required for parsing floating point numbers. (Bundled as submodule.)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://www.tcpdump.org"},"libpcap")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:null},"Required for PCAP import, export, and pivoting to and from PCAP traces.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://github.com/zeek/broker"},"broker")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:null},"Required to build the Broker plugin.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"http://www.doxygen.org"},"Doxygen")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:null},"Required to build documentation for libvast.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"https://github.com/jgm/pandoc"},"Pandoc")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:null},"Required to build manpage for VAST.")))),(0,i.kt)("p",null,"The minimum specified versions reflect those versions that we use in CI and\nmanual testing. Older versions may still work in select cases."),(0,i.kt)("h3",{id:"nix-environment"},"Nix Environment"),(0,i.kt)("p",null,"We provide a Nix flake you can use to setup an environment in which all\ndependencies are available. Running ",(0,i.kt)("inlineCode",{parentName:"p"},"nix develop")," inside the main source\ndirectory will get you there."),(0,i.kt)("p",null,"You can also delegate the entire build process to Nix with by invoking\n",(0,i.kt)("inlineCode",{parentName:"p"},"nix build"),", but be aware that this method does not support incremental\nbuilds in case you plan to make changes to the source code."),(0,i.kt)("h2",{id:"compile"},"Compile"),(0,i.kt)("p",null,"Building VAST involves the following steps:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/tenzir/vast/releases/latest"},"Download the latest release"),"\nor clone the repository recursively:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone --recursive https://github.com/tenzir/vast\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Configure the build with CMake. For faster builds, we recommend passing\n",(0,i.kt)("inlineCode",{parentName:"p"},"-G Ninja")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"cmake"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd vast\ncmake -B build\n")),(0,i.kt)("p",{parentName:"li"},"Optionally, you can use the CMake TUI to visually configure the build:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ccmake build\n")),(0,i.kt)("p",{parentName:"li"},"The source tree also contains a set of CMake presets that combine various\nconfiguration options into curated build flavors. You can list them with:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cmake --list-presets\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Build the executable:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cmake --build build --target all\n")))),(0,i.kt)("h2",{id:"test"},"Test"),(0,i.kt)("p",null,"After you have built the executable, run the unit and integration tests to\nverify that your build works as expected:"),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run component-level unit tests:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ctest --test-dir build\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run end-to-end integration tests:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cmake --build build --target integration\n")))),(0,i.kt)("h2",{id:"install"},"Install"),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"Install VAST system-wide or into a custom prefix:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cmake --install build\n# Optional: Install to a custom prefix\ncmake --install build --prefix /path/to/install/prefix\n")))))}u.isMDXComponent=!0}}]);